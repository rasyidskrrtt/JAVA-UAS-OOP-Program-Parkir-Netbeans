package container;

import java.awt.HeadlessException;
import java.sql.Connection;
import java.sql.SQLException;
import java.util.Random;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import java.sql.*;
import java.math.BigDecimal;
import java.text.NumberFormat;
import java.time.Duration;
import java.time.LocalDate;
import java.time.LocalDateTime;
import java.time.LocalTime;
import java.time.format.DateTimeFormatter;

public class mainPage extends javax.swing.JFrame {

    Statement stmt;
    Connection con;
    ResultSet res;
    String url = "jdbc:mysql://localhost:3306/adminparkir";
  
    private final DefaultTableModel tableRP;

    public mainPage() {
        initComponents();
        tableRP = new DefaultTableModel();
        tableMasuk.setModel(tableRP);
        tableKeluar.setModel(tableRP);
        tableRP.addColumn("Nomor");
        tableRP.addColumn("Kode Parkir");
        tableRP.addColumn("Nomor Plat");
        tableRP.addColumn("Jenis Kendaraan");
        tableRP.addColumn("Jam Masuk");  
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel3 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel12 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        entryPanel = new javax.swing.JPanel();
        labelPlat = new javax.swing.JLabel();
        labelJenis = new javax.swing.JLabel();
        fieldPlat = new javax.swing.JTextField();
        comboJenis = new javax.swing.JComboBox<>();
        labelKode = new javax.swing.JLabel();
        generateKode = new javax.swing.JButton();
        kodeField = new javax.swing.JTextField();
        daftar = new javax.swing.JButton();
        Tampil = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        tableMasuk = new javax.swing.JTable();
        edit = new javax.swing.JButton();
        departurePanel = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        kodeFieldOut = new javax.swing.JTextField();
        harga = new javax.swing.JTextField();
        CekOut = new javax.swing.JButton();
        UpdateData = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        jamKeluar = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        TotalJamParkir = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        nomorPlatField = new javax.swing.JTextField();
        jenisKendaraanField = new javax.swing.JTextField();
        tableRiayat = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableKeluar = new javax.swing.JTable();
        keluar = new javax.swing.JButton();

        jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel3.setText("Jl. HS.Ronggo Waluyo, Puseurjaya, Telukjambe Timur");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(255, 51, 0));

        jPanel1.setBackground(new java.awt.Color(153, 0, 51));
        jPanel1.setToolTipText("");

        jLabel12.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(255, 255, 255));
        jLabel12.setText("PROGRAM PARKIR UNSIKA");

        jLabel9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/container/unsika1.png"))); // NOI18N

        jLabel4.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Karawang, Jawa Barat");

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Jl. HS.Ronggo Waluyo, Puseurjaya, Telukjambe Timur");

        jTabbedPane1.setBackground(new java.awt.Color(153, 0, 51));
        jTabbedPane1.setForeground(new java.awt.Color(255, 255, 255));

        entryPanel.setBackground(new java.awt.Color(153, 0, 51));

        labelPlat.setForeground(new java.awt.Color(255, 255, 255));
        labelPlat.setText("Nomor Plat");

        labelJenis.setForeground(new java.awt.Color(255, 255, 255));
        labelJenis.setText("Jenis Kendaraan");

        fieldPlat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fieldPlatActionPerformed(evt);
            }
        });

        comboJenis.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Pilih Jenis Kendaraan", "Motor", "Mobil" }));
        comboJenis.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboJenisActionPerformed(evt);
            }
        });

        labelKode.setForeground(new java.awt.Color(255, 255, 255));
        labelKode.setText("Kode Parkir");

        generateKode.setText("Generate");
        generateKode.setAlignmentX(0.5F);
        generateKode.setAlignmentY(0.0F);
        generateKode.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                generateKodeActionPerformed(evt);
            }
        });

        kodeField.setEditable(false);
        kodeField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                kodeFieldActionPerformed(evt);
            }
        });

        daftar.setText("Daftar");
        daftar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                daftarActionPerformed(evt);
            }
        });

        Tampil.setText("Tampilkan");
        Tampil.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TampilActionPerformed(evt);
            }
        });

        tableMasuk.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Nomor", "Kode Parkir", "Nomor Plat", "Jenis Kendaran", "Jam Masuk"
            }
        ));
        tableMasuk.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableMasukMouseClicked(evt);
            }
        });
        tableMasuk.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                tableMasukComponentShown(evt);
            }
        });
        jScrollPane3.setViewportView(tableMasuk);

        edit.setText("Edit");
        edit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout entryPanelLayout = new javax.swing.GroupLayout(entryPanel);
        entryPanel.setLayout(entryPanelLayout);
        entryPanelLayout.setHorizontalGroup(
            entryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(entryPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(entryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(entryPanelLayout.createSequentialGroup()
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 562, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addGroup(entryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(Tampil, javax.swing.GroupLayout.DEFAULT_SIZE, 124, Short.MAX_VALUE)
                            .addComponent(daftar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(edit, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(entryPanelLayout.createSequentialGroup()
                        .addGroup(entryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(labelPlat)
                            .addComponent(labelJenis)
                            .addComponent(labelKode))
                        .addGap(24, 24, 24)
                        .addGroup(entryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(comboJenis, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(fieldPlat)
                            .addGroup(entryPanelLayout.createSequentialGroup()
                                .addComponent(kodeField)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(generateKode, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(213, 213, 213)))))
                .addContainerGap())
        );
        entryPanelLayout.setVerticalGroup(
            entryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(entryPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(entryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelPlat)
                    .addComponent(fieldPlat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(entryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(comboJenis, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelJenis))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(entryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(labelKode)
                    .addGroup(entryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(kodeField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(generateKode)))
                .addGap(18, 18, 18)
                .addGroup(entryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(entryPanelLayout.createSequentialGroup()
                        .addComponent(edit, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addComponent(daftar, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(Tampil, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(63, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Masuk", entryPanel);

        departurePanel.setBackground(new java.awt.Color(153, 0, 51));

        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Kode Parkir");

        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Jumlah Bayar");

        kodeFieldOut.setEditable(false);
        kodeFieldOut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                kodeFieldOutActionPerformed(evt);
            }
        });

        harga.setEditable(false);
        harga.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hargaActionPerformed(evt);
            }
        });

        CekOut.setText("Checkout");
        CekOut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CekOutActionPerformed(evt);
            }
        });

        UpdateData.setText("Tampilkan Update Data");
        UpdateData.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UpdateDataActionPerformed(evt);
            }
        });

        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("Jam Keluar");

        jamKeluar.setEditable(false);
        jamKeluar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jamKeluarActionPerformed(evt);
            }
        });

        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("Total Jam Parkir");

        TotalJamParkir.setEditable(false);
        TotalJamParkir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TotalJamParkirActionPerformed(evt);
            }
        });

        jLabel10.setForeground(new java.awt.Color(255, 255, 255));
        jLabel10.setText("Jenis Kendaraan");

        jLabel11.setForeground(new java.awt.Color(255, 255, 255));
        jLabel11.setText("Nomor Plat");

        nomorPlatField.setEditable(false);
        nomorPlatField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nomorPlatFieldActionPerformed(evt);
            }
        });

        jenisKendaraanField.setEditable(false);
        jenisKendaraanField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jenisKendaraanFieldActionPerformed(evt);
            }
        });

        tableRiayat.setText("Tampilkan Table Data");
        tableRiayat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tableRiayatActionPerformed(evt);
            }
        });

        tableKeluar.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Nomor", "Kode Parkir", "Nomor Plat", "Jenis Kendaraan", "Jam Masuk"
            }
        ));
        tableKeluar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableKeluarMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tableKeluar);

        javax.swing.GroupLayout departurePanelLayout = new javax.swing.GroupLayout(departurePanel);
        departurePanel.setLayout(departurePanelLayout);
        departurePanelLayout.setHorizontalGroup(
            departurePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(departurePanelLayout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(departurePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel7)
                    .addComponent(jLabel5)
                    .addGroup(departurePanelLayout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(departurePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(kodeFieldOut, javax.swing.GroupLayout.DEFAULT_SIZE, 125, Short.MAX_VALUE)
                            .addComponent(jamKeluar)
                            .addComponent(harga))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 52, Short.MAX_VALUE)
                .addGroup(departurePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel8)
                    .addComponent(jLabel11)
                    .addComponent(jLabel10))
                .addGap(26, 26, 26)
                .addGroup(departurePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jenisKendaraanField, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(nomorPlatField, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(TotalJamParkir, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 62, Short.MAX_VALUE)
                .addGroup(departurePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(tableRiayat, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(UpdateData, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(CekOut, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
            .addGroup(departurePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(departurePanelLayout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 710, Short.MAX_VALUE)))
        );
        departurePanelLayout.setVerticalGroup(
            departurePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(departurePanelLayout.createSequentialGroup()
                .addGap(209, 209, 209)
                .addGroup(departurePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(kodeFieldOut, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(jLabel10)
                    .addComponent(tableRiayat)
                    .addComponent(jenisKendaraanField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(9, 9, 9)
                .addGroup(departurePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jamKeluar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7)
                    .addComponent(jLabel11)
                    .addComponent(nomorPlatField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(UpdateData))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(departurePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(harga, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8)
                    .addComponent(TotalJamParkir, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(CekOut, javax.swing.GroupLayout.DEFAULT_SIZE, 24, Short.MAX_VALUE))
                .addGap(0, 16, Short.MAX_VALUE))
            .addGroup(departurePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, departurePanelLayout.createSequentialGroup()
                    .addContainerGap(15, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(132, Short.MAX_VALUE)))
        );

        jTabbedPane1.addTab("Keluar", departurePanel);

        keluar.setText("Keluar");
        keluar.setBorder(null);
        keluar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                keluarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jSeparator1)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel9)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 343, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel12)
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addGap(83, 83, 83)
                        .addComponent(keluar, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jTabbedPane1))
                .addContainerGap(21, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel12)
                            .addComponent(keluar, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel4))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addComponent(jLabel9)))
                .addGap(5, 5, 5)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 351, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(12, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void tableKeluarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableKeluarMouseClicked
        // TODO add your handling code here:
try {
    int baris = tableKeluar.rowAtPoint(evt.getPoint());

    // Mendapatkan data dari tabel
    String kodeParkir = tableKeluar.getValueAt(baris, 1).toString();
    String nomorPlat = tableKeluar.getValueAt(baris, 2).toString();
    String jenisKendaraan = tableKeluar.getValueAt(baris, 3).toString();
    String waktuMasukStr = tableKeluar.getValueAt(baris, 4).toString();

    // Set data ke komponen teks
    kodeFieldOut.setText(kodeParkir);
    nomorPlatField.setText(nomorPlat);
    jenisKendaraanField.setText(jenisKendaraan);

    // Formatter untuk waktu masuk dan keluar
    DateTimeFormatter formatter = DateTimeFormatter.ofPattern("yyyy-MM-dd HH:mm:ss");
    LocalDateTime waktu_masuk = LocalDateTime.parse(waktuMasukStr, formatter);
    LocalDateTime waktu_keluar = LocalDateTime.now();
    String waktuKeluarFormatted = waktu_keluar.format(formatter);
    jamKeluar.setText(waktuKeluarFormatted);
    
    // Menghitung total durasi parkir
    Duration durasiParkir = Duration.between(waktu_masuk, waktu_keluar);
    long totalJamParkir = durasiParkir.toHours();
    long sisaMenit = durasiParkir.toMinutesPart();

    // Menambahkan satu jam jika ada sisa menit atau durasi kurang dari satu jam
    if (sisaMenit > 0 || totalJamParkir < 1) {
        totalJamParkir++;
    }

    // Menghitung jumlah hari parkir
    long totalHariParkir = totalJamParkir / 24;
    long sisaJam = totalJamParkir % 24;

    // Menampilkan total jam parkir
    if (totalHariParkir > 0) {
        TotalJamParkir.setText(totalHariParkir + " hari " + sisaJam + " jam");
    } else {
        TotalJamParkir.setText(totalJamParkir + " jam");
    }

    BigDecimal hargaPerJam;
    if (jenisKendaraan.equals("Motor")) {
        // Menggunakan harga per jam dari objek Motor (dan kelas induknya Mobil)
        Motor mt = new Motor(new BigDecimal("5000"));
        hargaPerJam = mt.getHargaPerJam();
    } else {
        // Menggunakan harga per jam dari objek Mobil
        Mobil mb = new Mobil(new BigDecimal("10000"));
        hargaPerJam = mb.getHargaPerJam();
    }

    // Menghitung biaya parkir
    BigDecimal biayaParkir = hargaPerJam.multiply(new BigDecimal(totalJamParkir));

    // Batas Maksimal Biaya Parkir
    if (jenisKendaraan.equals("Motor") && biayaParkir.compareTo(new BigDecimal("15000")) > 0) {
        biayaParkir = new BigDecimal("15000");
    } else if (jenisKendaraan.equals("Mobil") && biayaParkir.compareTo(new BigDecimal("25000")) > 0) {
        biayaParkir = new BigDecimal("25000");
    }

    // Menampilkan biaya parkir pada komponen harga
    harga.setText("Rp " + NumberFormat.getInstance().format(biayaParkir));
} catch (Exception e) {
    JOptionPane.showMessageDialog(this, e.getMessage());
}

    }//GEN-LAST:event_tableKeluarMouseClicked

    private void tableRiayatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tableRiayatActionPerformed
        // TODO add your handling code here:
        riwayatPage obj = new riwayatPage();
        obj.setVisible(true);
        setVisible(false);
    }//GEN-LAST:event_tableRiayatActionPerformed

    private void jenisKendaraanFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jenisKendaraanFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jenisKendaraanFieldActionPerformed

    private void nomorPlatFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nomorPlatFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nomorPlatFieldActionPerformed

    private void TotalJamParkirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TotalJamParkirActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TotalJamParkirActionPerformed

    private void jamKeluarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jamKeluarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jamKeluarActionPerformed

    private void UpdateDataActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UpdateDataActionPerformed
        tableRP.getDataVector().removeAllElements();
        tableRP.fireTableDataChanged();
        try {
            int i = 1;
            con = DriverManager.getConnection(url, "root", "");
            stmt = con.createStatement();
            String sql1 = "SELECT * FROM listparkir";
            res = stmt.executeQuery(sql1);
            while (res.next()) {
                Object[] o = new Object[9];
                o[0] = i;
                o[1] = res.getString("kodeParkir");
                o[2] = res.getString("nomorPlat");
                o[3] = res.getString("jenis");
                o[4] = res.getString("waktu_masuk");
                tableRP.addRow(o);
                i++;
            }
            res.close();
            stmt.close();
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "Gagal koneksi " + e);
        }
    }//GEN-LAST:event_UpdateDataActionPerformed

    private void CekOutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CekOutActionPerformed
        // TODO add your handling code here:
        try {
    // Ambil data dari form
    String kodeParkir = kodeFieldOut.getText();
    String nomorPlat = tableKeluar.getValueAt(tableKeluar.getSelectedRow(), 2).toString();
    String jenisKendaraan = tableKeluar.getValueAt(tableKeluar.getSelectedRow(), 3).toString();
    LocalDateTime waktu_keluar = LocalDateTime.now(); // Ambil waktu saat ini menggunakan LocalDateTime.now()

    // Ambil waktu masuk dari tabel sebagai String dan ubah ke LocalDateTime
    String waktu_masukStr = tableKeluar.getValueAt(tableKeluar.getSelectedRow(), 4).toString();
    DateTimeFormatter formatter = DateTimeFormatter.ofPattern("yyyy-MM-dd HH:mm:ss");
    LocalDateTime waktu_masuk = LocalDateTime.parse(waktu_masukStr, formatter);

    // Hitung durasi parkir
    Duration durasiParkir = Duration.between(waktu_masuk, waktu_keluar);
    long totalJamParkir = durasiParkir.toHours();
    long sisaMenit = durasiParkir.toMinutesPart();

    // Menambahkan satu jam jika ada sisa menit atau durasi kurang dari satu jam
    if (sisaMenit > 0 || totalJamParkir < 1) {
        totalJamParkir++;
    }
    // Menghitung jumlah hari parkir
    long totalHariParkir = totalJamParkir / 24;
    long sisaJam = totalJamParkir % 24;

    // Menampilkan total jam parkir
    if (totalHariParkir > 0) {
        TotalJamParkir.setText(totalHariParkir + " hari " + sisaJam + " jam");
    } else {
        TotalJamParkir.setText(totalJamParkir + " jam");
    }

    // Buat instance vehicle berdasarkan jenis kendaraan
    Vehicle vehicle;
    if (jenisKendaraan.equals("Motor")) {
        vehicle = new Motor(new BigDecimal("5000"));
    } else {
        vehicle = new Mobil(new BigDecimal("10000"));
    }

    // Hitung biaya parkir menggunakan method polymorphic
    BigDecimal biayaParkir = vehicle.calculateBiayaParkir(totalJamParkir);

    // Simpan data ke tabel keluarparkir
    String sqlKeluar = "INSERT INTO parkirkeluar (kodeParkir, nomorPlat, jenis, waktu_keluar, biayaParkir, totalJamParkir) VALUES (?, ?, ?, ?, ?, ?)";
    java.sql.Connection conn = Konfigurasi.configDB();
    try (java.sql.PreparedStatement pstmKeluar = conn.prepareStatement(sqlKeluar)) {
        pstmKeluar.setString(1, kodeParkir);
        pstmKeluar.setString(2, nomorPlat);
        pstmKeluar.setString(3, jenisKendaraan);
        pstmKeluar.setTimestamp(4, Timestamp.valueOf(waktu_keluar)); // Ubah tipe variabel menjadi Timestamp
        pstmKeluar.setBigDecimal(5, biayaParkir);
        pstmKeluar.setLong(6, totalJamParkir);
        pstmKeluar.executeUpdate();
    }
    JOptionPane.showMessageDialog(null, "Checkout Berhasil !");
    riwayatPage obj = new riwayatPage();
    obj.setVisible(true);
    setVisible(false);

    // Hapus data dari tabel listparkir
    String sqlList = "DELETE FROM listparkir WHERE kodeParkir = ?";
    java.sql.PreparedStatement pstmList = conn.prepareStatement(sqlList);
    pstmList.setString(1, kodeParkir);
    pstmList.executeUpdate();
    pstmList.close();

    // Refresh tabel keluar parkir
    UpdateDataActionPerformed(evt);

    // Clear form
    cetak();
    hapus();

} catch (HeadlessException | SQLException e) {
    JOptionPane.showMessageDialog(this, e.getMessage());
}

    }//GEN-LAST:event_CekOutActionPerformed

    private void hargaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hargaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_hargaActionPerformed

    private void kodeFieldOutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_kodeFieldOutActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_kodeFieldOutActionPerformed

    private void tableMasukComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_tableMasukComponentShown
        // TODO add your handling code here:
    }//GEN-LAST:event_tableMasukComponentShown

    private void tableMasukMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableMasukMouseClicked
        // TODO add your handling code here:
        int baris = tableMasuk.rowAtPoint(evt.getPoint());
        String kodeParkir = tableMasuk.getValueAt(baris, 1).toString();
        kodeField.setText(kodeParkir);

        String nomorPlat = tableMasuk.getValueAt(baris, 2).toString();
        fieldPlat.setText(nomorPlat);

        String jenisKendaraan = tableMasuk.getValueAt(baris, 3).toString();
        comboJenis.setSelectedItem(jenisKendaraan);
    }//GEN-LAST:event_tableMasukMouseClicked

    private void TampilActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TampilActionPerformed
        tableRP.getDataVector().removeAllElements();
        tableRP.fireTableDataChanged();
        try {
            int i = 1;
            con = DriverManager.getConnection(url, "root", "");
            stmt = con.createStatement();
            String sql1 = "SELECT * FROM listparkir";
            res = stmt.executeQuery(sql1);
            while (res.next()) {
                Object[] o = new Object[9];
                o[0] = i;
                o[1] = res.getString("kodeParkir");
                o[2] = res.getString("nomorPlat");
                o[3] = res.getString("jenis");
                o[4] = res.getString("waktu_masuk");
                tableRP.addRow(o);
                i++;
            }
            res.close();
            stmt.close();
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "Gagal koneksi " + e);
        }
    }//GEN-LAST:event_TampilActionPerformed

    private void daftarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_daftarActionPerformed
        tableRP.getDataVector().removeAllElements();
        tableRP.fireTableDataChanged();
        try {
            java.sql.Connection conn = DriverManager.getConnection(url, "root", "");

            String countQuery = "SELECT COUNT(*) FROM listparkir";
            java.sql.PreparedStatement countPstm = conn.prepareStatement(countQuery);
            ResultSet resultSet = countPstm.executeQuery();

            if (resultSet.next()) {
                int rowCount = resultSet.getInt(1);

                if (rowCount >= 1000) {
                    JOptionPane.showMessageDialog(null, "Parkir penuh. Tidak dapat menambahkan data baru.");
                } else {
                    String insertQuery = "INSERT INTO listparkir VALUES('" + kodeField.getText() + "','" + fieldPlat.getText() + "','" + comboJenis.getSelectedItem() + "', CURRENT_TIMESTAMP)";
                    java.sql.PreparedStatement insertPstm = conn.prepareStatement(insertQuery);
                    insertPstm.execute();
                    JOptionPane.showMessageDialog(null, "Proses Simpan Data Berhasil !");
                }
            }
            resultSet.close();
            countPstm.close();
            conn.close();

        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, e.getMessage());
        }
    }//GEN-LAST:event_daftarActionPerformed

    private void kodeFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_kodeFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_kodeFieldActionPerformed

    private void generateKodeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_generateKodeActionPerformed
        // TODO add your handling code here:
        final String alphabet = "0123456789ABCDE";
        final int N = alphabet.length();
        Random r = new Random();
        String text = "";
        for (int i = 0; i < 4; i++) {
            text += String.valueOf(alphabet.charAt(r.nextInt(N))); //Shouldn't even implicitly need String.valueOf(char)...

        }
        kodeField.setText(String.valueOf(text));
    }//GEN-LAST:event_generateKodeActionPerformed

    private void comboJenisActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboJenisActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_comboJenisActionPerformed

    private void fieldPlatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fieldPlatActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_fieldPlatActionPerformed

    private void editActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editActionPerformed
        // TODO add your handling code here:
        editPlatNomor();
    }//GEN-LAST:event_editActionPerformed

    private void keluarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_keluarActionPerformed
        // TODO add your handling code here:
        loginPage obj = new loginPage();
        obj.setVisible(true);
        setVisible(false);
    }//GEN-LAST:event_keluarActionPerformed

    static void cetak() {
        String url = "jdbc:mysql://localhost:3306/adminparkir";
        DefaultTableModel model = new DefaultTableModel();
        model.addColumn("kodeParkir");
        model.addColumn("nomorPlat");
        model.addColumn("jenis");
        try {
            String sql = "SELECT * FROM listparkir";
            java.sql.Connection conn = DriverManager.getConnection(url, "root", "");
            java.sql.Statement stm = conn.createStatement();
            java.sql.ResultSet res = stm.executeQuery(sql);

            while (res.next()) {
                model.addRow(new Object[]{res.getString(1),
                    res.getString(2), res.getString(3), res.getString(4)});
            }
        } catch (SQLException e) {
            System.out.println("Error : " + e.getMessage());
        }
    }

    private void hapus() {
        kodeField.setText(null);
        fieldPlat.setText(null);
        comboJenis.setSelectedItem(this);
    }
    
    private void editPlatNomor() {
    int selectedRow = tableMasuk.getSelectedRow();
    if (selectedRow >= 0) {
        String newPlatNomor = JOptionPane.showInputDialog(this, "Masukkan nomor plat baru:");
        if (newPlatNomor != null && !newPlatNomor.isEmpty()) {
            try {
                Connection conn = DriverManager.getConnection(url, "root", "");
                String sql = "UPDATE listparkir SET nomorPlat = ? WHERE kodeParkir = ?";
                PreparedStatement pstmt = conn.prepareStatement(sql);
                pstmt.setString(1, newPlatNomor);
                pstmt.setString(2, tableMasuk.getValueAt(selectedRow, 1).toString());
                pstmt.executeUpdate();
                JOptionPane.showMessageDialog(this, "Nomor plat berhasil diubah.");
                updateTableMasuk();
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(this, "Error: " + ex.getMessage());
            }
        }
    } else {
        JOptionPane.showMessageDialog(this, "Silakan pilih data yang ingin diubah.");
    }
}
    
    private void updateTableMasuk() {
    try {
        int i = 1;
        Connection conn = DriverManager.getConnection(url, "root", "");
        Statement stmt = conn.createStatement();
        ResultSet rs = stmt.executeQuery("SELECT * FROM listparkir");
        tableRP.setRowCount(0);
        while (rs.next()) {
            Object[] row = new Object[5];
            row[0] = i;
            row[1] = rs.getString("kodeParkir");
            row[2] = rs.getString("nomorPlat");
            row[3] = rs.getString("jenis");
            row[4] = rs.getString("waktu_masuk");
            tableRP.addRow(row);
            i++;
        }
        rs.close();
        stmt.close();
        conn.close();
    } catch (SQLException ex) {
        JOptionPane.showMessageDialog(this, "Error: " + ex.getMessage());
    }
}
    


    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(mainPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(mainPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(mainPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(mainPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new mainPage().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton CekOut;
    private javax.swing.JButton Tampil;
    private javax.swing.JTextField TotalJamParkir;
    private javax.swing.JButton UpdateData;
    private javax.swing.JComboBox<String> comboJenis;
    private javax.swing.JButton daftar;
    private javax.swing.JPanel departurePanel;
    private javax.swing.JButton edit;
    private javax.swing.JPanel entryPanel;
    private javax.swing.JTextField fieldPlat;
    private javax.swing.JButton generateKode;
    private javax.swing.JTextField harga;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTextField jamKeluar;
    private javax.swing.JTextField jenisKendaraanField;
    private javax.swing.JButton keluar;
    private javax.swing.JTextField kodeField;
    private javax.swing.JTextField kodeFieldOut;
    private javax.swing.JLabel labelJenis;
    private javax.swing.JLabel labelKode;
    private javax.swing.JLabel labelPlat;
    private javax.swing.JTextField nomorPlatField;
    private javax.swing.JTable tableKeluar;
    private javax.swing.JTable tableMasuk;
    private javax.swing.JButton tableRiayat;
    // End of variables declaration//GEN-END:variables
}
